/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java Library project to get you started.
 * For more details take a look at the Java Libraries chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.0/userguide/java_library_plugin.html
 */

plugins {
    // Apply the java-library plugin to add support for Java Library
//	id 'io.spring.dependency-management' version '1.0.7.RELEASE'
    id 'java-library'
    id 'application'
	id 'distribution'
	id 'war'
}


group = 'com.sointe'
//version = '0.0.1-SNAPSHOT'

sourceCompatibility = '11'

configurations {
	developmentOnly
	runtimeClasspath {
		extendsFrom developmentOnly
	}
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
    // Use jcenter for resolving dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
}

ext {
	startClass = "com.sointe.Application"
	snippetsDir = file("build/generated-snippets")
	tomcatHome = "D:/apache-tomcat"

	javaxServletApiVersion = "4.0.+"
	javaxServletJspApiVersion = "2.3.+"

	commonsBeanUtilsVersion = "1.+" // commons-digester3 , 1.8.3
	commonsCodecVersion =  "1.+"
	commonsCollectionsVersion = "3.+" //
	commonsCollections4Version = "4.+" //
	commonsConfiguration2Version = "2.+"
	commonsDbcp2Version = "2.+"
	commonsPool2Version = "2.+"
	commonsDbUtilsVersion = "1.+"
	commonsDigester3Version = "3.+"
	cglibVersion = "2.2+" // commons-digester3 , 2.2.2
	asmVersion = "3.3+" // commons-digester3 , 3.3.1

	log4j2Version = "2.+"
	slf4jVersion = "1.7+" // 1.8.0-beta4
	
	derbyVersion = "10.+"
	h2Version = "1.+"
	hsqldbVersion = "2.5+"
	mssqlVersion = "8.+"
	mariadbVersion = "2.+"
	mongodbVersion = "3.+"
	mysqlVersion = "8.+"
	postgresqlVersion = "42.+"
	sqliteVersion = "3.+"
	
	protobufVersion = "3.6+" // mysql , 3.6.1
	
	hikaricpVersion = "3.4+"
	tomcatVersion = "9.0+"
	jooqVersion = "3.11+"

	guavaVersion = "28.+"
	failureAccessVersion  = "1.0.+" // +--- com.google.guava:failureaccess:1.0.1
	listenableFutureVersion = "9999+" // +--- com.google.guava:listenablefuture:9999.0-empty-to-avoid-conflict-with-guava
	jsr305Version = "3.0+" // +--- com.google.code.findbugs:jsr305:3.0.2
	errorProneAnnotationsVersion = "2.+" // +--- com.google.errorprone:error_prone_annotations:2.2.0
	j2objcAnnotationsVersion = "1.+" // +--- com.google.j2objc:j2objc-annotations:1.1
	checkerQualVersion = "2.+" // +--- org.checkerframework:checker-qual:2.5.2
	animalSnifferAnnotationsVersion = "1.+" // \--- org.codehaus.mojo:animal-sniffer-annotations:1.17	

	jnaVersion = "5.+" // httpclient5 , 5.2.0
	jsoupVersion = "1.+"
	
	httpCore5Version = "5.0+"
	httpClient5Version = "5.0+"

	shiroVersion = "1.5+"
	
	jamesServerVersion = "3.+"

	springframeworkVersion = "5.+"
	springSecurityVersion = "5.+"

	thymeleafVersion = "3.0+"
	thymeleafExtrasVersion = "3.0+"
	ognlVersion = "3.2.+" // 3.1.12 
	attoparserVersion = "2.0.+"
	unbescapeVersion = "1.1.+"
	javassistVersion = "3.25.+" // 3.24.1-GA
	
	junitVersion = '5.4.2'
}

dependencies {
    // This dependency is exported to consumers, that is to say found on their compile classpath.
//    api 'org.apache.commons:commons-math3:3.6.1'

    // compileOnly / providedCompile
	compileOnly 'javax.servlet:javax.servlet-api:' + javaxServletApiVersion
	compileOnly 'javax.servlet.jsp:javax.servlet.jsp-api:' + javaxServletJspApiVersion
	
	// embedded container
//	implementation 'org.apache.tomcat.embed:tomcat-embed-core:' + tomcatVersion // req: annotations-api
//	implementation 'org.apache.tomcat.embed:tomcat-embed-el:' + tomcatVersion
//	compileOnly 'org.apache.tomcat.embed:tomcat-embed-jasper:' + tomcatVersion // req: tomcat-embed-el , tomcat-embed-core , ecj
//	compileOnly 'org.apache.tomcat.embed:tomcat-embed-websocket:' + tomcatVersion
	

    // Apache Commons: https://commons.apache.org/ ****************************
//	implementation 'org.apache.bcel:bcel' // 6.3.1
//	implementation 'commons-beanutils:commons-beanutils:' + commonsBeanUtilsVersion // commons-digester3 , 1.8.3
//	implementation 'org.apache.bsf:bsf-api' // 3.1
//	implementation 'commons-chain:commons-chain' // 1.2
//	implementation 'commons-cli:commons-cli' // 1.4
//	implementation 'commons-codec:commons-codec:' + commonsCodecVersion
//	implementation 'commons-collections:commons-collections' // 3.2.2
//	implementation 'org.apache.commons:commons-collections4' // 4.3
//	implementation 'org.apache.commons:commons-compress' // 1.18
//	implementation 'commons-configuration:commons-configuration' // 1.10
//	implementation 'org.apache.commons:commons-configuration2:' + commonsConfiguration2Version // 2.4
//	implementation 'org.apache.commons:commons-crypto' // 1.0.0
//	implementation 'org.apache.commons:commons-csv', version: commonsCsvVersion
//	implementation 'commons-daemon:commons-daemon' // 1.0.15
//	implementation 'commons-dbcp:commons-dbcp' // 1.4
//	implementation 'commons-pool:commons-pool' // 1.5.4
//	providedCompile 'org.apache.commons:commons-dbcp2:' + commonsDbcp2Version
//	providedCompile 'org.apache.commons:commons-pool2:' + commonsPool2Version
	implementation 'commons-dbutils:commons-dbutils:' + commonsDbUtilsVersion // 1.7
//	implementation 'commons-digester:commons-digester' // 2.1
//	implementation 'org.apache.commons:commons-digester3:' + commonsDigester3Version
//	implementation 'cglib:cglib:' + cglibVersion // commons-digester3 , 2.2.2
//	implementation 'asm:asm:' + asmVersion // commons-digester3 , 3.3.1
//	implementation 'commons-email:commons-email' // 1.1
//	implementation 'org.apache.commons:commons-email', version: commonsEmailVersion
//	implementation 'org.apache.commons:commons-exec' // 1.4
//	implementation 'commons-fileupload:commons-fileupload' // 1.4
//	compile 'org.apache.commons:commons-geometry'
//	implementation 'org.apache.commons:commons-imaging' // 1.0-r1653468
//	implementation 'commons-io:commons-io' // 2.6
//	compile 'org.apache.commons:commons-jci-core:1.1
//	compile 'org.apache.commons:commons-jcs-core:2.2
//	compile 'org.apache.commons:commons-jcs-jcache:2.2
//	implementation 'commons-jelly:commons-jelly' // 1.0.1
//	implementation 'commons-jexl:commons-jexl' // 1.1
//	implementation 'org.apache.commons:commons-jexl' // 2.1.1
//	implementation 'org.apache.commons:commons-jexl3' // 3.1
//	implementation 'commons-jxpath:commons-jxpath' // 1.3
//	implementation 'commons-lang:commons-lang' // 2.6
//	implementation 'org.apache.commons:commons-lang3', version: commonsLang3Version
	implementation 'commons-logging:commons-logging' // 1.2
//	implementation 'org.apache.commons:commons-math' // 2.2
//	implementation 'org.apache.commons:commons-math3', version: commonsMath3Version
//	implementation 'commons-net:commons-net' // 3.6
//	implementation 'org.apache.commons:commons-numbers-parent' // pom:1.0-SNAPSHOT
//	implementation 'org.apache.commons:commons-proxy' // 1.0
//	implementation 'org.apache.commons:commons-rdf-api' // 0.5.0
//	implementation 'org.apache.commons:commons-rdf-simple' // 0.5.0
//	implementation 'org.apache.commons:commons-rdf-jena' // 0.5.0
//	implementation 'org.apache.commons:commons-text' // 1.6
//	implementation 'commons-validator:commons-validator' // 1.6
//	implementation 'org.apache.commons:commons-vfs2' // 2.2

    // Apache Log4j 2 *********************************************************
	implementation 'org.apache.logging.log4j:log4j-api:' + log4j2Version
	implementation 'org.apache.logging.log4j:log4j-core:' + log4j2Version
    // Log4j 1.x API Bridge
    // If existing components use Log4j 1.x and you want to have this logging routed 
    // to Log4j 2, then remove any log4j 1.x dependencies and add the following.
	implementation 'org.apache.logging.log4j:log4j-1.2-api:' + log4j2Version
    // Apache Commons Logging Bridge
    // If existing components use Apache Commons Logging 1.x and you want to have
    // this logging routed to Log4j 2, then add the following but do not remove any
    // Commons Logging 1.x dependencies.
	implementation 'org.apache.logging.log4j:log4j-jcl:' + log4j2Version
    // SLF4J Bridge
    // If existing components use SLF4J and you want to have this logging routed 
    // to Log4j 2, then add the following but do not remove any SLF4J dependencies.
	implementation 'org.apache.logging.log4j:log4j-slf4j-impl:' + log4j2Version
    // JUL Adapter
    // If existing components use Java Util Logging and you want to have this logging
    // routed to Log4j 2, then add the following.
	implementation 'org.apache.logging.log4j:log4j-jul:' + log4j2Version
    // Web Servlet Support
    // In order to properly support and handle the ClassLoader environment and 
    // container lifecycle of a web application, an additional module is required. 
    // This module is only required at runtime. In addition, if you’re using servlets 
    // in an OSGi environment, make sure your preferred version of the servlet API is 
    // already available (e.g., if you want to use 3.0, but you’ve also got 2.5 loaded, 
    // make sure both are loaded).
	implementation 'org.apache.logging.log4j:log4j-web:' + log4j2Version
    // Tag Library
    // The Log4j Log Tag Library creates the capability of inserting log statements in 
    // JSPs without the use of Java scripting. It uses the standard Log4j 2 API to log 
    // messages according to your Log4j configuration.
	implementation 'org.apache.logging.log4j:log4j-taglib:' + log4j2Version
	// Apache Flume Appender
	// The Flume Appender allows applications to send events to Flume Agents.
//	implementation 'org.apache.logging.log4j:log4j-flume-ng'
    // https://logging.apache.org/log4j/2.x/maven-artifacts.html

	implementation 'org.slf4j:slf4j-api:' + slf4jVersion

	// databases **************************************************************
//	providedCompile 'org.apache.derby:derby:' + derbyVersion // runtimeOnly
	implementation 'com.h2database:h2:' + h2Version // runtimeOnly
//	providedCompile 'org.hsqldb:hsqldb:' + hsqldbVersion // runtimeOnly , 2.4.1 , 2.5.0
//	providedCompile 'com.microsoft.sqlserver:mssql-jdbc:' + mssqlVersion // runtimeOnly , 6.4.0.jre8 , 7.2.2.jre11
	implementation 'org.mariadb.jdbc:mariadb-java-client:' + mariadbVersion // runtimeOnly , 2.3.0 , 2.4.1
//	providedCompile 'org.mongodb:mongo-java-driver:' + mongodbVersion // 3.10.1
//	providedCompile 'org.mongodb:mongodb-driver:' + mongodbVersion // 3.10.1
//	providedCompile 'org.mongodb:mongodb-driver-async:' + mongodbVersion // 3.10.1
//	providedCompile 'org.mongodb:mongodb-driver-sync:' + mongodbVersion // 3.10.1
//	providedCompile 'mysql:mysql-connector-java:' + mysqlVersion // runtimeOnly
//	providedCompile 'org.postgresql:postgresql:' + postgresqlVersion // runtimeOnly
//	providedCompile 'org.xerial:sqlite-jdbc:' + sqliteVersion // runtimeOnly , 3.25.2 , 3.27.2.1

//	providedCompile 'com.google.protobuf:protobuf-java:' + protobufVersion // mysql , 3.6.1

	implementation 'com.zaxxer:HikariCP:' + hikaricpVersion // 3.3.1
//	providedCompile 'org.apache.tomcat:tomcat-dbcp:' + tomcatVersion // 9.0.21

//	compileOnly 'org.jooq:jooq-meta:' + jooqVersion
//	compileOnly 'org.jooq:jooq-codegen:' + jooqVersion

	// tools ******************************************************************
//	implementation 'com.google.guava:guava:' + guavaVersion // 27.1-jre
//	implementation 'com.google.guava:failureaccess:' + failureAccessVersion  // 1.0.1
//	implementation 'com.google.guava:listenablefuture:' + listenableFutureVersion // 9999.0-empty-to-avoid-conflict-with-guava
//	implementation 'com.google.code.findbugs:jsr305:' + jsr305Version // 3.0.2
//	implementation 'com.google.errorprone:error_prone_annotations:' + errorProneAnnotationsVersion // 2.3.3 , 2.2.0
//	implementation 'com.google.j2objc:j2objc-annotations:' + j2objcAnnotationsVersion // 1.3 , 1.1
//	implementation 'org.checkerframework:checker-qual:' + checkerQualVersion // 2.8.0
//	implementation 'org.codehaus.mojo:animal-sniffer-annotations:' + animalSnifferAnnotationsVersion // 1.17 , 1.14

//	implementation 'net.java.dev.jna:jna:' + jnaVersion
//	implementation 'net.java.dev.jna:jna-platform:' + jnaVersion

//	implementation 'org.jsoup:jsoup:' + jsoupVersion

	// Apache HTTP Components *************************************************
//	implementation 'org.apache.httpcomponents:httpcore:' + httpCoreVersion // 4.4.11
//	implementation 'org.apache.httpcomponents:httpcore-nio:' + httpCoreVersion // 4.4.11
//	implementation 'org.apache.httpcomponents:httpclient:' + httpClientVersion // 4.5.8
//	implementation 'org.apache.httpcomponents:httpclient-cache:' + httpClientVersion // 4.5.8
//	implementation 'org.apache.httpcomponents:httpmime:' + httpAyncClientVersion // 4.5.8
//	implementation 'org.apache.httpcomponents:httpasyncclient:' + httpclientVersion // 4.1.4
//	implementation 'org.apache.httpcomponents.core5:httpcore5:' + httpCore5Version // 5.0-beta7
//	implementation 'org.apache.httpcomponents.core5:httpcore5-h2:' + httpCore5Version // 5.0-beta7
//	implementation 'org.apache.httpcomponents.core5:httpcore5-reactive:' + httpCore5Version // 5.0-beta7
//	implementation 'org.apache.httpcomponents.core5:httpcore5-osgi:' + httpCore5Version // 5.0-beta5
//	implementation 'org.apache.httpcomponents.client5:httpclient5:' + httpClient5Version // 5.0-beta3
//	implementation 'org.apache.httpcomponents.client5:httpclient5-cache:' + httpClient5Version // 5.0-beta3
//	implementation 'org.apache.httpcomponents.client5:httpclient5-fluent:' + httpClient5Version // 5.0-beta3
//	implementation 'org.apache.httpcomponents.client5:httpclient5-win:' + httpClient5Version // 5.0-beta3

	// Apache Shiro ***********************************************************
	implementation 'org.apache.shiro:shiro-core:' + shiroVersion
	implementation 'org.apache.shiro:shiro-web:' + shiroVersion
	
	// Apache James Server ****************************************************
	implementation 'org.apache.james:apache-james-mailbox-store:' + jamesServerVersion
	
	// springframework ********************************************************
//	implementation 'org.springframework:spring-context:' + springframeworkVersion
//	implementation 'org.springframework:spring-context-indexer:' + springframeworkVersion
//	implementation 'org.springframework:spring-context-support:' + springframeworkVersion
//	implementation 'org.springframework:spring-aop:' + springframeworkVersion
//	implementation 'org.springframework:spring-instrument:' + springframeworkVersion
//	implementation 'org.springframework:spring-instrument-tomcat:' + springframeworkVersion
//	implementation 'org.springframework:spring-orm:' + springframeworkVersion
//	implementation 'org.springframework:spring-jdbc:' + springframeworkVersion
//	implementation 'org.springframework:spring-oxm:' + springframeworkVersion
//	implementation 'org.springframework:spring-jms:' + springframeworkVersion
//	implementation 'org.springframework:spring-web:' + springframeworkVersion
//	implementation 'org.springframework:spring-webmvc:' + springframeworkVersion
//	implementation 'org.springframework:spring-webmvc-portlet:' + springframeworkVersion
//	implementation 'org.springframework:spring-websocket:' + springframeworkVersion
    
    // thymeleaf **************************************************************
	implementation 'org.thymeleaf:thymeleaf:' + thymeleafVersion
//	implementation 'org.thymeleaf:thymeleaf-spring5:' + thymeleafVersion
//	implementation 'org.thymeleaf:thymeleaf-testing:' + thymeleafVersion
//	implementation 'org.thymeleaf.extras:thymeleaf-extras-springsecurity5:'+ thymeleafExtrasVersion

	implementation 'ognl:ognl:' + ognlVersion // 3.2.10' // 3.1.17 - 3.1.12
	implementation 'org.attoparser:attoparser:' + attoparserVersion // 2.0.5.RELEASE' // 2.0.4.RELEASE
	implementation 'org.unbescape:unbescape:' + unbescapeVersion // 1.1.6.RELEASE' // 1.1.5.RELEASE
	implementation 'org.javassist:javassist:' + javassistVersion // 3.24.1-GA' // 3.20.0-GA

	testImplementation 'junit:junit:4.12'
	// test *******************************************************************
	// https://mvnrepository.com/artifact/org.junit.jupiter/junit-jupiter-api
	//testImplementation 'org.junit.jupiter"junit-jupiter-api:' + junitVersion
	
}

//dependencyManagement {
//	imports {
//		mavenBom 'com.microsoft.azure:azure-spring-boot-bom:' + azureVersion
//		mavenBom 'org.springframework.cloud:spring-cloud-dependencies:' + springCloudVersion
//		mavenBom 'org.apache.logging.log4j:log4j-bom:' + log4j2Version
//		mavenBom 'org.springframework:spring-framework-bom:' + springFrameworkVersion
//		mavenBom 'org.springframework.boot:spring-boot-dependencies:' + springBootAdminVersion
//		mavenBom 'de.codecentric:spring-boot-admin-dependencies:' + springBootAdminVersion
//	}
//}

mainClassName = startClass

jar {
	enabled = true

   // Keep jar clean:
//	exclude 'META-INF/*.SF', 'META-INF/*.DSA', 'META-INF/*.RSA', 'META-INF/*.MF'

	manifest {
		attributes 'Main-Class': startClass//, 'Class-Path': configurations.runtimeClasspath.files.collect { "lib/$it.name" }.join(' ')
	}
}

war {
	enabled = true
	baseName = "${project.name}"
//	archiveName = "${project.name}.war"
	from "src/main/webapp"
	classpath = jar
	classpath += configurations.runtimeClasspath
	//	webInf { from 'web/webinf' } // adds a file-set to the WEB-INF dir.
	//    webXml = file('web/web.xml') // copies a file to WEB-INF/web.xml
}

startScripts {
//	defaultJvmOpts += ["-Xms1024m", "-Xmx2048m"]
	defaultJvmOpts +='-Xms1024m -Xmx2048m'
	classpath = files('MY_APP_HOME/lib/*')
	doLast {
		unixScript.text = unixScript.text.replace('^CLASSPATH=.*$', 'CLASSPATH=$APP_HOME/lib/*')
		windowsScript.text = windowsScript.text.replace('^set CLASSPATH=.*$', 'set CLASSPATH=%APP_HOME%/lib/*')
	}
}

plugins.withType(DistributionPlugin) {
    distTar {
//		archiveName = "${project.name}.tar.gz"
		compression = Compression.GZIP
//		extension = 'tar.gz'
	    enabled = false
    }
    distZip {
//		archiveName = "${project.name}.zip"
	    enabled = false
    }
}
distributions {
	main {
		contents {
//			from (project.configurations.runtimeClasspath)
			// separate the built jar from the dependencies
//			into ("lib") {
//				from (project.configurations.runtimeClasspath)
//			}
//			into ("webapp") {
//				from "src/main/webapp"
//			}
		}
	}
}

task deleteTarget(type: Delete) {
	delete fileTree('${tomcatHome}/webapps/') {
//		include "${project.name}-${version}.war"
		include "${project.name}.war"
	}
}

task deploy (dependsOn: war) {
	copy {
		from war.archivePath // "build/libs"
		into ("${tomcatHome}/webapps/")
	}
}

task redeploy {
	dependsOn 'deleteTarget'
	dependsOn 'clean'
	dependsOn 'build'
	dependsOn 'deploy'
	tasks.findByName('clean').mustRunAfter 'deleteTarget'
	tasks.findByName('build').mustRunAfter 'clean'
	tasks.findByName('deploy').mustRunAfter 'build'
}
